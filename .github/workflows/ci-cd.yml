name: FiapCarros CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and Test
        run: ./mvnw -B clean verify

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            rodrigoamora/rodrigo-springboot:latest
            rodrigoamora/rodrigo-springboot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_NAME=FiapCarros
            VERSION=1.0

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 45
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          debug: true  # Ativa logs detalhados
          command_timeout: "20m"
          connect_timeout: "60s"
          script: |
            # Limpar ambiente
            mkdir -p ~/app
            cd ~/app
            sudo docker-compose down
            sudo docker system prune -af --volumes
            
            # Remover arquivo antigo e baixar novo
            rm -f docker-compose.yml
            wget -O docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.yml
            
            # Dar permissões e iniciar
            sudo chown -R $USER:$USER .
            
            # Iniciar containers com logs
            echo "Iniciando containers..."
            sudo docker-compose up -d
            
            # Aguardar MySQL (com retry e logs)
            echo "Aguardando MySQL iniciar..."
            for i in {1..30}; do
            echo "Tentativa $i de 30 para MySQL..."
            if sudo docker exec mysql-service mysqladmin ping -h localhost -u root -prodrigo@1988 >/dev/null 2>&1; then
            echo "MySQL está pronto!"
            break
            fi
            if [ $i -eq 30 ]; then
            echo "MySQL falhou ao iniciar. Logs do container:"
            sudo docker logs mysql-service
            exit 1
            fi
            sleep 10
            done
            
            # Verificar se o banco foi criado
            echo "Verificando banco de dados..."
            if ! sudo docker exec mysql-service mysql -u root -prodrigo@1988 -e "USE fiap_carros;"; then
            echo "Banco de dados não foi criado. Logs do MySQL:"
            sudo docker logs mysql-service
            exit 1
            fi
            
            # Mostrar status final
            echo "Status dos containers:"
            sudo docker-compose ps
            echo "Logs do MySQL:"
            sudo docker logs mysql-service
            echo "Logs da aplicação:"
            sudo docker logs fiap-carros